---
title: "The Relative Severity formula"
output: html_document
editor_options: 
  chunk_output_type: console
---


```{r}
#| eval: true
#| echo: false
#| message: false
library(dplyr)
library(ggplot2)
library(readr)
library(ggforce)
library(DT)
library(purrr)
library(ggpubr)
library(plotly)
here::i_am("docs/viz-RS-per-unit.qmd")
# sessionInfo()

```

```{r}
#| eval: true
#| message: false
target.dir <- "sandbox"
results_file <- here::here(target.dir, "relative-severity-degradation-suitability-all-tropical-glaciers.csv")
RS_results <- read_csv(results_file, show_col_types = FALSE)
source(here::here("inc","R","RS-functions.R"))
```

```{r}

old <- theme_set(theme_linedraw())
theme_update(panel.grid.minor = element_line(colour = "pink"),
panel.grid.major = element_line(colour = "rosybrown3"))

```

The original Relative Severity formula is given by:

$$
\mathrm{RS} =
    \frac{\mathrm{OD}}{\mathrm{MD}} =
    \frac{V_{0} - V_{F}}{V_{0} - V_{C}}
$$
Where $V_{0}$ is the initial value of the indicator, $V_{F}$ is the final value, and $V_{C}$ is the collapse threshold. There are several inconveniences with this formulation:

- if $V_{F}>V_{0}$ the value of $\mathrm{OD}$ is negative and $\mathrm{RS}$ is negative,
- if $V_{C}>V_{0}$ the value of $\mathrm{MD}$ is negative and $\mathrm{RS}$ is negative,
- if $|\mathrm{OD}| > |\mathrm{MD}|$ the value of $\mathrm{RS}$ increases disproportionatly.

We propose to use a conditional formula to avoid artifacts:

$$
\mathrm{RS}_{cor}=
    \begin{cases}
      0, & \text{if}\ V_{0} ≤ V_{F} \\
      \mathrm{OD}/\mathrm{MD}, & \text{otherwise} \\
      1, & \text{if}\ V_{0} ≤ V_{C} \\
    \end{cases}
$$

We show the differences between both formulas with some examples.

## Rwenzori

We focus initially in the case of the tropical glacier ecosystems of Rwenzori mountains in Africa. 

When we consider future projections from one model and scenario (mri-esm2-0, ssp126) for the timeframe 2041-2070, and use a collapse threshold of 0.056 (equal sensitivity and specificity threshold), we find that for one cells the initial value is equal to the collapse threshold, thus maximum decline is zero and the RS formula is undefined. For another cell the final value is much lower than the collapse threshold and the observed decline is more than twice as large as the maximum decline. With the conditional formula, these extreme cases would be considered $RS=1$, i.e. collapsed.


```{r}
RS_results %>% 
  filter(
    unit %in% "Rwenzori",
    pathway %in% "ssp126",
    modelname %in% "mri-esm2-0",
    timeframe %in% "2041-2070",
    threshold %in% "ess",
    )  %>% 
  select(id,cellnr,CV,IV,FV,OD,MD,RS,RS_cor) %>%
  DT::datatable()

```

In this interactive plot, we can visualise these problems 
```{r}

d <- RS_results %>% 
  filter(
    unit %in% "Rwenzori",
    pathway %in% "ssp126",
    modelname %in% "mri-esm2-0",
    threshold %in% "ess"
    ) %>%
  mutate(cat = case_when(
    IV == CV ~"Collapsed<br>(MD == 0)",
    FV < CV ~"Collapsed<br>(FV>CV)",
    OD > MD ~ "Collapsed<br>(OD > MD)",
    OD < 0 ~ "Improved\n(OD < 0)",
    IV < CV ~"Collapsed<br>(IV>CV)",
    TRUE ~ "Degradation\n(0 < RS < 1)"
  ))


colline.fmt = list(dash="dash", width = 0.5, color='red')
ncline.fmt = list(dash="dot", width = 0.5, color='brown')

fig <- plot_ly(
  d, x = ~IV, y = ~FV,
  # Hover text:
  text = ~sprintf("Obs. decline: %0.3f<br>Max. decline: %0.3f<br>Rel. severity: %0.3f<br>%s", 
                  OD, MD,RS_cor,cat)
)
fig <- add_markers(fig, color = ~cat, size = ~RS_cor,
            symbol = ~cat, symbols = c('o','x','circle')) 
fig <- add_lines(fig, x = ~IV, y = ~IV, name="no change", line=ncline.fmt)
fig <- add_lines(fig, y = unique(d$CV), name="collapse threshold", line=colline.fmt)
fig <- add_lines(fig, x = unique(d$CV), name="collapse threshold", line=colline.fmt)


layout(fig,
       title = "Example Relative Severity calculation  (Rwenzori)",
       xaxis = list(title="Initial value"),
       yaxis = list(title="Final value")
       )
```


In this unit, the positive predictive rate threshold if very high (0.698) and we have the problem that most of the initial values are above the threshold and the formula of RS give uninformative results. Using the conditional formula, all these cased would be calculated as $RS=1$ or collapsed.


```{r}
RS_results %>% 
  filter(
    unit %in% "Rwenzori",
    pathway %in% "ssp126",
    modelname %in% "mri-esm2-0",
    timeframe %in% "2041-2070",
    threshold %in% "ppv",
    )  %>% 
  select(id,cellnr,CV,IV,FV,OD,MD,RS,RS_cor) %>%
  DT::datatable()

```

Aggregating the original RS values can be problematic. In this table we can compare the mean values for different thresholds and time frames. Using the conditional RS formula we see a clear increasing trend, but the values of the original formula translate to unpredictable and uninformative mean values of RS.

```{r}
RS_results %>% 
  filter(
    unit %in% "Rwenzori",
    pathway %in% "ssp126",
    modelname %in% "mri-esm2-0"
    ) %>% 
  group_by(timeframe, threshold) %>% 
  summarise(
    n=n(),
    mean_RS=mean(RS,na.rm=T),
    mean_RS_cor=mean(RS_cor,na.rm=T)) %>% 
  DT::datatable()

```

## Ecuador

Let's consider now the case of the tropical glacier ecosystem of Ecuador. Here we have a larger sample due to the larger extent and number of glaciers. We focus here in the nearest time frame and see that some cells have larger final values than the initial values. With the conditional formula these units will be considered $RS=0$ and this means that the magnitude of the improvement is lost. The consequence of this interpretation for the risk assessment needs to be discussed in more detail, but it is unlikely to be of much consequence in this case study where the trend is overwhelmingly negative. For studied focused on ecosystem recovery, a negative value of $OD$ might be informative, but its relationship with the $MD$ could be explored in alternative ways.

```{r}

d <- RS_results %>% 
  filter(
    unit %in% "Ecuador",
    timeframe %in% "2011-2040",
    pathway %in% "ssp126",
    modelname %in% "mri-esm2-0",
    threshold %in% "ess"
    ) %>%
  mutate(cat = case_when(
    IV == CV ~"Collapsed<br>(MD == 0)",
    FV < CV ~"Collapsed<br>(FV>CV)",
    OD > MD ~ "Collapsed<br>(OD > MD)",
    OD < 0 ~ "Improved\n(OD < 0)",
    IV < CV ~"Collapsed<br>(IV>CV)",
    TRUE ~ "Degradation\n(0 < RS < 1)"
  ))


colline.fmt = list(dash="dash", width = 0.5, color='red')
ncline.fmt = list(dash="dot", width = 0.5, color='brown')

fig <- plot_ly(
  d, x = ~IV, y = ~FV,
  # Hover text:
  text = ~sprintf("Obs. decline: %0.3f<br>Max. decline: %0.3f<br>Rel. severity: %0.3f<br>Rel. sev. (cond): %0.3f<br>%s", 
                  OD, MD,RS,RS_cor,cat)
)
fig <- add_markers(fig, color = ~cat, size = ~RS_cor,
            symbol = ~cat, symbols = c('o','x','circle')) 
fig <- add_lines(fig, x = ~IV, y = ~IV, name="no change", line=ncline.fmt)
fig <- add_lines(fig, y = unique(d$CV), name="collapse threshold", line=colline.fmt)
fig <- add_lines(fig, x = unique(d$CV), name="collapse threshold", line=colline.fmt)


layout(fig,
       title = "Example Relative Severity calculation (Ecuador)",
       xaxis = list(title="Initial value"),
       yaxis = list(title="Final value")
       )
```

