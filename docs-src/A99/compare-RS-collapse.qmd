---
output: html_document
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

```{r}
#| label: load libraries and functions
#| eval: true
#| echo: false
#| message: false
library(dplyr)
library(ggplot2)
library(units)
library(stringr)
library(ggrepel)
#library(purrr)
library(readr)
require(glmmTMB)
require(lme4)
here::i_am("docs-src/Mass-balance-model.qmd")
#sessionInfo()
source(here::here("inc","R","RS-functions.R"))
```

```{r}
#| label: read input data 
#| eval: true
#| message: false
target_dir <- "sandbox"
results_file <- here::here(target_dir, "massbalance-model-data-all-groups.rds")
massbalance_results <- readRDS(results_file)
results_file <- here::here(target_dir, "relative-severity-degradation-suitability-all-tropical-glaciers.csv")
RS_results <- read_csv(results_file, show_col_types = FALSE) %>%
  mutate(unit_name=str_replace_all(unit," ","-"))
```


```{r}
#| label: ggplot theme
old <- theme_set(theme_linedraw())
theme_update(panel.grid.minor = element_line(colour = "pink"),
panel.grid.major = element_line(colour = "rosybrown3"))
```





a mixed effect model with units and replicates as random effects would make more sense (and binomial family?)

Using a beta family  is probably best given the RS is related to a proportion not a binomial outcome.
suggestion is to use glmmTMB:
- https://stats.stackexchange.com/questions/233366/how-to-fit-a-mixed-model-with-response-variable-between-0-and-1

The problem is that we have values of 1 (collapse), a solution is to:
> However, you can construct this model yourself with a bit more effort, since (unlike in discrete-count models) the three components (y==0, 0<y<1, y==1) are completely disjoint: a) fit a logistic model for "zero vs non-zero", b) fit a logistic model for "non-one vs one", c) fit a Beta model for the non-zero, non-one data. This will be equivalent (but more cumbersome) to fitting a combination zero-one-inflated model. The log-likelihood will be the sum of the three log-likelihoods.

- https://github.com/glmmTMB/glmmTMB/issues/660



We used a generalised linear mixed effect model (GLMM) to test the effect of the choice of indicator in predicting collapse (RS=1) and the magnitude of decline (value of RS). In all models we included fixed effects of the scenarios and time frame, and random effects of the assessment units. 

We considered three different indicators: (a) RS of the loss of ice mass with $CT=0 \mathrm{kg}$ for the years 2040, 2070 and 2100, and RS of the decline in suitability for three timeframes (2011-2040, 2041-2070, 2070-2100), using (b) the $CT$ of maximum accuracy, and (c) the $CT$ of equal sensitivity and specificity. The time frames were coded as values 0, 1 and 2, respectively.

We considered that the indicator could have both a fixed (systematic effect or bias) and a random effect (increased variability) in both collapse and magnitude of RS. We used a binomial GLMM with logit link function to test the proportion of models reaching collapse (using $y=1$ if $RS=1$ and $y=0$ otherwise), and a beta distribution GLMM with logit link function with $y=RS$ for all observations where $RS<1$. 



The effect of the choice of indicator was different for the prediction of collapse and the magnitude of RS. There is no significant difference between the indicators in the proportion of models predicting collapse, and in the model without fixed effects of indicator, we found that the indicator explains a similar proportion of the random variance as the unit of assessment.


For the magnitude of RS there is a significant fixed effect in the magnitude of RS, but a minor effect on the variance. The model suggest a significant underestimation of the indicators based on suitability compared with the ice mass indicator.



Diagnostics of the fitted model


```{r}
require(DHARMa)
mod_degradation_simres<-simulateResiduals(mod_degradation_sat)

plot(mod_degradation_simres)
testDispersion(mod_degradation_simres)

outliers(mod_degradation_simres)
testUniformity(mod_degradation_simres)

## not sure if this makes sense
mod_degradation_simres2 <- recalculateResiduals(mod_degradation_simres, group = mod_degradation_sat$frame$unit_name)
testUniformity(mod_degradation_simres2)
##plot(mod_degradation_simres2) 

plot_data <- tibble(
  fittedPredictedResponse = predict(mod_collapse_sat, type="response"),
  unit_name = mod_collapse_sat$frame$unit,
  mtd = mod_collapse_sat$frame$method,
  scn = mod_collapse_sat$frame$scenario
  )
ggplot(plot_data) +
  geom_boxplot(aes(y=fittedPredictedResponse,
                   x=unit_name)) 
+
  facet_wrap(~unit_name)

rr <- ranef(mod_degradation_sat)
#print(rr, simplify=FALSE)
## extract Subject conditional modes for conditional model
x <- rr$cond$unit_name %>% pull(`(Intercept)`)

rr <- ranef(mod_collapse_sat)
y <- rr$cond$unit %>% pull(`(Intercept)`)

```

----

<details><summary>R session info for this chapter </summary>

```{r}
sessionInfo()
```
</details>