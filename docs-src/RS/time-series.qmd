---
title: "Temporal change in Relative Severity"
output: html_document
editor_options: 
  chunk_output_type: console
---


We calculate temporal change in Relative Severity by applying the $\mathrm{RS}_{i}$ formula to one fixed initial value and a sequence of final values, the final values can represent the state of the indicator in consecutive years (time series), or in different periods (temporal sequence). 

```{r}
#| label: load libraries and functions
#| eval: true
#| echo: false
#| message: false
library(dplyr)
library(ggplot2)
library(units)
library(stringr)
library(ggrepel)
library(purrr)
library(readr)
library(tidyr)
library(forcats)
library(DT)
library(htmltools)

here::i_am("docs-src/RS/time-series.qmd")
source(here::here("inc","R","RS-functions.R"))
source(here::here("inc","R","RS-shared.R"))
source(here::here("inc","R","html-css-shared.R"))
```

```{r}
#| label: read input data 
#| eval: true
#| message: false
target_dir <- "sandbox"
rds_file <- here::here(target_dir,"massbalance-totalmass-all-groups.rds")
totalmass_year_data <- readRDS(rds_file)
results_file <- here::here(target_dir, "relative-severity-degradation-suitability-all-tropical-glaciers.csv")
RS_results <- read_csv(results_file, show_col_types = FALSE) %>%
  mutate(unit_name=str_replace_all(unit," ","-"))
```


## Loss of ice mass

The data from the Dynamic Ice Mass Balance model is available in one year intervals, and we have summarised the data to provide the total value of ice mass of each assessment unit for each year.

We calculate RS using the predicted ice mass of the year 2000 as initial value, and data from subsequent years (2001 to 2100) as final values, and a collapse threshold of $0 \mathrm{kg}$. [We denote this estimate of relative severity as $RS_{ice}^{CT=0}$.]{.aside} Given that the collapse threshold is also the minimum value of ice possible, and that increases in ice mass are low in magnitude and limited to the start of the time series, we can use the original RS formula. An example of these calculations is given in @fig-rs-ice-example-kili.

### Average RS time series

Using the equation for average RS, we can create time series of $\overline{\mathrm{RS}}$ for each assessment unit.

```{r}
#| label: fig-rs-ice-all-units
#| fig-cap: "Time series of average RS values for the ice mass indicator variable for all assessment units. We use here data from the 100 years time series calculated for one scenario (SSP2-4.5), and combined median and median absolute deviation (based on 50 replicates per model) for all 12 models. The line represent the best estimate and the shaded area represent the interval between aggregated  min and max values for each year."
#| eval: true
RStotal <- totalmass_year_data %>%
  filter(
    ssp %in% c("SSP2-4.5")
  ) %>%
  group_by(unit_name, model_nr) %>%
  group_modify(~RSts(
    .x$year,
    .x$total_mass,
    vmin=.x$min_mass,
    vmax=.x$max_mass,
    formula = "original"
    )
    ) 
RStotal <- RStotal %>%
 pivot_longer(
  cols = starts_with("RS"),
    names_to = "type",
    values_to = "RS"
 )  %>%
 group_by(unit_name,year) %>%
 summarise(
  RSmin = min(RS),
  RSmax = max(RS),
  RSmean = mean(RS),
  .groups = "keep"
  ) %>%
 mutate(
  unit_name = factor(unit_name, unit_order),
  collapsed = RSmin>0.99
  )

ggplot(RStotal) +
  geom_ribbon(aes(x = year, ymin = RSmin, ymax = RSmax), alpha=.55, fill = okabe[2]) +
  geom_line(aes(x = year, y = RSmean, colour = collapsed), alpha=.85, linewidth=1.2) +
  facet_wrap(~ unit_name, labeller=labeller(unit_name=label_wrap_gen())) +
  scale_colour_discrete(type=okabe[c(5,6)]) +
  theme(legend.position="none") +
  ylab(expression(bar(RS))) +
  xlab("Year")
  
```

### Milestones of degradation and collapse

The curves indicate an increase of RS, and in some units the maximum value of 1 is attained, indicating ecosystem collapse (red sections of the curve). Certain thresholds could be used to indicate increasing levels of degradation before collapse. For example, a threshold of 0.8 (80% of the maximum value of RS) could be indictive of widespread and very high degradation. The use of these thresholds could be informative to determine the expected tempo of the process of ecosystem collapse.


```{r}
#| label: fig-thresholds-ice-all-units
#| fig-cap: "Histogram of years when thresholds of very high degradation and collapse are reached. "
#| eval: true
RStotal <- totalmass_year_data %>%
  filter(
    ssp %in% c("SSP2-4.5")
  ) %>%
  group_by(unit_name, model_nr) %>%
  group_modify(~RSts(
    .x$year,
    .x$total_mass,
    vmin=.x$min_mass,
    vmax=.x$max_mass,
    formula = "original"
    )) 
RSyears <- RStotal %>%
  mutate(
    unit_name = factor(unit_name, unit_order),
    non_collapsed=if_else(RS<0.99,year,2000),
    max_non_collapsed=if_else(RS_min<0.99,year,2000),
    min_non_collapsed=if_else(RS_max<0.99,year,2000),
    non_severe=if_else(RS<0.80,year,2000),
    max_non_severe=if_else(RS_min<0.80,year,2000),
    min_non_severe=if_else(RS_max<0.80,year,2000)
    ) %>%
  group_by(unit_name,model_nr) %>%
  summarise(
    med_collapse_year=max(non_collapsed,na.rm=T)+1,
    max_collapse_year=max(max_non_collapsed,na.rm=T)+1,
    min_collapse_year=max(min_non_collapsed,na.rm=T)+1,
    med_severe_year=max(non_severe,na.rm=T)+1,
    max_severe_year=max(max_non_severe,na.rm=T)+1,
    min_severe_year=max(min_non_severe,na.rm=T)+1,
            .groups = "keep")

severity_years <- RSyears %>% pivot_longer(ends_with("year"), values_to = "year",names_to=c("bound","variable"), names_pattern="(.*)_(.*)_year") %>% filter(year<2101)

clrs <- c("severe"=okabe[4],"collapse"=okabe[1])

ggplot(severity_years) +
  geom_histogram(aes(x=year,fill=variable, weight=50/3),binwidth=5) +
  facet_wrap(~ unit_name, labeller=labeller(unit_name=label_wrap_gen())) +
  scale_fill_manual(values=clrs,labels=c(expression(bar(RS)>0.99),expression(bar(RS)>=0.80))) +
  theme(legend.position="top") +
  xlab("Year") + ylab("Nr. of replicates")
```

For example if we compare the years when a model predicts very high degradation and the year when it predicts collapse [@fig-thresholds-ice-all-units], we can see that the gap between both milestones can be as short as 15 years (for Puncak Jaya and Mount Kenia) or as long as half a century (for Mexico), see table @tbl-gap-thresholds. 

```{r}
#| label: tbl-gap-thresholds
#| tbl-cap: "Median gap between the year when very high degradation is reached and the year of collapse. Based on the values shown in @fig-thresholds-ice-all-units."

#pull header names from the table
header.names <- c("Assessment unit", "Nr. of Models indicating collapse", "Gap in years")
# The container parameter allows us to design the header of the table using CSS
my.container <- withTags(table(
  style(type = "text/css", header.style),
    thead(
      tr(
      lapply(header.names, th, style = cell.style)
      )
    )
  )
)

RSyears %>%
  filter(med_collapse_year<2101) %>%
  group_by(unit_name) %>%
  summarise(n = n(), preaviso = median(med_collapse_year-med_severe_year)) %>%
  datatable(
    rownames = FALSE,
    options = list(
      dom = 't', 
      pageLength = -1,
      order = list(list(2, 'asc'))),
      container=my.container,
    colnames = )
```


## Degradation of bioclimatic suitability

For the habitat suitability model the predictions are available for four time frames. The first time frame (1980-2010) represents current conditions (our initial values), and the three future time frames can be used as final values to track the progression of RS over time. 

Thresholds of collapse for the bioclimatic suitability model are estimated based on optimal cut-off points that minimise classification errors. Given that both initial and final values of suitability can be below these thresholds, and that future suitability predictions can be well above current values, we use the conditional RS formula for these estimates of RS.


```{r}
#| label: fig-RS-periods
#| fig-cap: "Mean relative severity (RS) of decline in bioclimatic suitability for the assessment unit of the T.G.E. of Ecuador for five global circulation models (points), and three different timeframes (columns), future scenarios (rows) and collapse thresholds (x axis) based on threshold of the confusion matrix ( $acc$: maximum accuracy, $ess$: equal sensitivity and specificity, and $ppv$: Positive predictive value)."
#| warning: false
slc_unit <- "Ecuador"
dat1 <- RS_results %>%
  filter(unit %in% slc_unit) %>%
  mutate(year=case_when(
    timeframe %in% "2011-2040"~2025,
    timeframe %in% "2041-2070"~2055,
    timeframe %in% "2071-2100"~2085
    ),
    scn=str_replace(pathway,"[ssp]+([0-9])([0-9])([0-9])","SSP\\1-\\2.\\3"),) %>%
  group_by(scn,threshold,timeframe,year,modelname) %>%
  summarise(n=n(),RSmean=mean(RS_cor),RSmed=median(RS_cor),
  .groups = "keep")

ggplot(dat1) +
  geom_point(data=dat1,
               aes(y = RSmean, 
                   colour=threshold, 
                   x=timeframe)) + 
  facet_grid(scn~threshold) +
  ylab("Mean RS") +
  xlab("Collapse thresholds") +
  theme(legend.position="none")
```


```{r}
cED_data <- readRDS(here::here("sandbox","totalmass-suitability-cED-data.rds"))

ggplot(cED_data) +
geom_boxplot(aes(y=cED_80,x=time,group=time)) +
facet_grid(scenario~method)

ggplot(cED_data) +
geom_boxplot(aes(y=AUC_cED,x=time,group=time)) +
facet_grid(scenario~method)

```
----

<details><summary>R session info for this chapter </summary>

```{r}
sessionInfo()
```
</details>