---
output: html_document
editor_options: 
  chunk_output_type: console
---

## Projection of Ice Mass Balance


```{r}
#| label: load libraries and functions
#| eval: true
#| echo: false
#| message: false
library(dplyr)
library(ggplot2)
library(units)
library(stringr)
library(ggrepel)
library(purrr)
library(readr)
library(tidyr)
library(DT)
here::i_am("docs-src/IND/mass-balance-model.qmd")
source(here::here("inc","R","RS-functions.R"))
source(here::here("inc","R","RS-shared.R"))
# Suppress summarise info
#options(dplyr.summarise.inform = FALSE)
# or use the .groups argument as suggested
```

```{r}
#| label: read input data 
#| eval: true
#| message: false
target_dir <- "sandbox"
#results_file <- here::here(target_dir, "massbalance-model-data-all-groups.rds")
#massbalance_results <- readRDS(results_file)
rds_file <- here::here(target_dir, "massbalance-year-collapse-all-groups.rds")
year_of_collapse_data <- readRDS(rds_file)
rds_file <- here::here(target_dir,"massbalance-totalmass-all-groups.rds")
totalmass_year_data <- readRDS(rds_file)
```

We use ice mass balance projections for the glacier of the Cordillera de Mérida based on a glacier evolution model [@Rounce_2023_MassBalance_Global]. This hybrid model combines a mass balance module and a glacier dynamics module to model glaciers independently from 2000-2100 for various ensembles of Global Circulation Models and scenarios. 

According to the published methods [@Rounce_2023_MassBalance_Global]:

> The model computes the climatic mass balance (i.e., snow accumulation minus melt plus refreezing) for each surface elevation bin using a monthly time step. The model computes glacier melt using a degree-day model, accumulation using a temperature threshold, and refreezing based on the annual air temperature. Glacier geometry is updated annually using a flowline model based on the Shallow-Ice Approximation to explicitly account for glacier dynamics using a density of 900 kg m-3 for converting mass to volume. 

The values used here are the output values (ice mass \pm median absolute deviation) of the model for the four glacier outlines of the Randolph Glacier Inventory for the cordillera de Mérida downloaded from @Rounce_2022_MassBalance_Global_Data and presented in @fig-Ea. These values clearly overestimate the existing ice mass but we focus the analysis on the point of collapse and not on the mass value _per se_.

```{r}

totalmass_year_data %>%
  filter(year==2000, !ssp %in% "SSP1-1.9") %>%
  group_by(unit_name) %>%
  summarise(median(total_mass), min(min_mass), max(max_mass))
```

```{r}
#| label: fig-Ea
#| fig-cap: Estimated ice mass in Megatonnes for all glacier outlines of the Cordillera de Mérida for each shared socioeconomic pathways. 
#| warning: false

# "Kilimanjaro", "Ecuador", "Mexico"

totalmass_year_data %>%
  filter(
    unit_name == "Cordillera de Merida",
    ssp %in% c("SSP1-2.6", "SSP2-4.5", "SSP3-7.0")) %>%
  ggplot(aes(x=year,y=total_mass)) +
    geom_errorbar(aes(ymin=min_mass, ymax=max_mass), width=.2,
                  position=position_dodge(.9),
                alpha=.5,col="gray") +
    geom_point(aes(colour=ssp),cex=.5) +
    facet_wrap(.~ssp) +
    ylab("Projected annual mass of ice [Mt]") +
    xlab("Year") + 
    theme(legend.position = "none") 

```

We use these mass projections to estimate the year of collapse (first year when mass reaches zero) for each combination of models and scenarios. The empirical cumulative distribution function of the year of collapse (@fig-ECDF-collapse-year) allow us to estimate the proportion of models indicating collapse for each year. 


```{r}
#| label: tbl-collapse-2100
#| tbl-cap: "Proportion of #| models predicting collapse before 2100 for each assessment unit."


year_of_collapse_data %>%
  group_by(unit_name,ssp) %>%
  summarise(
    prob_collapse=mean(collapse_year<2100)*100,
    prob_min=mean(min_collapse_year<2100)*100,
    prob_max=mean(max_collapse_year<2100)*100,
              .groups = "keep"
    ) %>%
  transmute(
    unit_name,ssp,
    prob_collapse,
    prob_bounds=case_when(
      prob_collapse == prob_max & prob_collapse == prob_min ~ "",
      TRUE ~ sprintf("(%0.1f -- %0.1f)", prob_max, prob_min)
    )
  ) %>%
  pivot_wider(names_from=ssp,values_from=c(prob_collapse, prob_bounds)) %>%
  select(1,3,8,4,9,5,10) %>%
  datatable(
    rownames = FALSE,
    options = list(
      dom = 't', 
      pageLength = -1,
      order = list(list(5, 'asc'))),
    colnames = c("Assessment unit", "SSP1-2.6", "bounds", "SSP2-4.5", "bounds", "SSP3-7.0", "bounds")) %>%
      formatRound(c("prob_collapse_SSP1-2.6", "prob_collapse_SSP3-7.0", "prob_collapse_SSP2-4.5"),digits=1) %>%
      formatStyle(
        columns = c("unit_name","prob_collapse_SSP1-2.6", "prob_collapse_SSP3-7.0", "prob_collapse_SSP2-4.5", "prob_bounds_SSP1-2.6", "prob_bounds_SSP3-7.0", "prob_bounds_SSP2-4.5"), 
        fontSize = '80%')
```

For at least seven asssessment units a proportion of the dynamic ice mass balance models predict total loss of ice between 2040 and 2100.[For one unit the collapse occurs between 2100-2102]{.aside}

```{r}
#| label: fig-Histogram-collapse-year
#| fig-cap: Histogrom of year of collapse for all assessment units (panels) and for each shared socioeconomic pathways (SSP, fill colour).
#| warning: false


ggplot(data=
  year_of_collapse_data %>%
    filter(
      collapse_year < 2100, 
      ssp %in% c("SSP1-2.6", "SSP2-4.5", "SSP3-7.0")
      )) +
  geom_histogram(aes(x=collapse_year,fill=ssp)) +
  xlab("Year of collapse") + 
  facet_wrap(~unit_name) +
  theme(legend.position = "top")

```


```{r}
#| label: fig-ECDF-collapse-year
#| fig-cap: ECDF (empirical cumulative distribution function) plot of year of collapse for all models (black line) and for each shared socioeconomic pathways (SSP, labeled lines) for the assessment unit of the T.G.E. of Mexico.
#| warning: false

data_ss <- year_of_collapse_data %>%
  filter(
    unit_name=="Mexico",
    ssp %in% c("SSP1-2.6", "SSP2-4.5", "SSP3-7.0")
    ) 
label_xy <- data_ss %>%
    group_by(ssp) %>%
  summarise(x=median(collapse_year),
              .groups = "keep") %>%
  mutate(y=0.5)

ggplot(data=data_ss ) +
#  geom_histogram(aes(x=collapse_year,fill=scn)) +
  stat_ecdf(aes(x=collapse_year,color = ssp,linetype = ssp), 
              geom = "step") +
  stat_ecdf(aes(x=collapse_year), 
              geom = "step",lwd=1.3) +
    geom_label_repel(
    aes(x=x,y=y,label = ssp, color=ssp), data = label_xy,
    size = 3) +
  xlab("Year of collapse") + 
  theme(legend.position = "none")

```




