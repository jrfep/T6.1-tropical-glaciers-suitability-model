---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Projection of Ice Mass Balance {#sec-icemass}

```{r}
#| label: load libraries and functions
#| eval: true
#| echo: false
#| message: false
library(dplyr)
library(ggplot2)
library(units)
library(stringr)
library(ggrepel)
library(purrr)
library(readr)
library(tidyr)
library(DT)
here::i_am("docs-src/IND/mass-balance-model.qmd")
source(here::here("inc","R","RS-functions.R"))
source(here::here("inc","R","RS-shared.R"))
# Suppress summarise info
#options(dplyr.summarise.inform = FALSE)
# or use the .groups argument as suggested
```

```{r}
#| label: read input data 
#| eval: true
#| message: false
target_dir <- "sandbox"
#results_file <- here::here(target_dir, "massbalance-model-data-all-groups.rds")
#massbalance_results <- readRDS(results_file)
rds_file <- here::here(target_dir, "massbalance-year-collapse-all-groups.rds")
year_of_collapse_data <- readRDS(rds_file)
rds_file <- here::here(target_dir,"massbalance-totalmass-all-groups.rds")
totalmass_year_data <- readRDS(rds_file)
```

We use ice mass balance projections for all tropical glaciers based on a glacier evolution model [@Rounce_2023_MassBalance_Global]. This hybrid model combines a mass balance module and a glacier dynamics module to model glaciers independently from 2000-2100 for various ensembles of Global Circulation Models (GCM) and scenarios of Shared Socio-economic Pathways (SSP). 

According to the published methods [@Rounce_2023_MassBalance_Global]:

> The model computes the climatic mass balance (i.e., snow accumulation minus melt plus refreezing) for each surface elevation bin using a monthly time step. The model computes glacier melt using a degree-day model, accumulation using a temperature threshold, and refreezing based on the annual air temperature. Glacier geometry is updated annually using a flowline model based on the Shallow-Ice Approximation to explicitly account for glacier dynamics using a density of 900 kg m-3 for converting mass to volume. 


The values used here are the output values (ice mass $\pm$ median absolute deviation) of the model for all glacier outlines of the Randolph Glacier Inventory for the Low Latitudes region downloaded from @Rounce_2022_MassBalance_Global_Data. Estimated initial values summarised by assessment unit are presented in @tbl-mass.

```{r}
#| label: tbl-mass
#| tbl-cap: "Initial mass per assessment unit for the year 2000 for a representative scenario."
#| warning: false

totalmass_year_data %>%
  filter(year==2000, !ssp %in% "SSP1-1.9") %>%
  group_by(unit_name) %>%
  summarise(medmass = median(total_mass), 
  minmass = min(min_mass), 
  maxmass = max(max_mass)) %>%
  datatable(
    rownames = FALSE,
    options = list(
      dom = 't', 
      pageLength = -1,
      order = list(list(2, 'asc'))),
    colnames = c("Assessment unit", "median total mass", "min lower bound", "max upper bound")) %>%
      formatRound(c("medmass", "minmass", "maxmass"),digits=1) %>%
      formatStyle(
        columns = c("unit_name","medmass", "minmass", "maxmass"), 
        fontSize = '80%')
```

The model predicts future median ice mass values and their variability (as median absolute deviation) between 2000 and 2100 based on 12 unnamed GCMs and 5 SSP. This results in considerable uncertainty in future predictions of the total ice mass for each unit (see @fig-Ea for an example of one unit and three scenarios). 

```{r}
#| label: fig-Ea
#| fig-cap: Estimated ice mass in Megatonnes for all glacier outlines of Mexico for three shared socioeconomic pathways. Points represent the sum of median ice mass for each outline, and the grey bars represent the uncertainty ($\pm$ median absolute deviation).
#| warning: false

# "Kilimanjaro", "Ecuador",

totalmass_year_data %>%
  filter(
    unit_name ==  "Mexico",
    ssp %in% c("SSP1-2.6", "SSP2-4.5", "SSP3-7.0")) %>%
  ggplot(aes(x=year,y=total_mass)) +
    geom_errorbar(aes(ymin=min_mass, ymax=max_mass), width=.2,
                  position=position_dodge(.9),
                alpha=.5,col="gray") +
    geom_point(aes(colour=ssp),cex=.5) +
    facet_wrap(.~ssp) +
    ylab("Projected annual mass of ice [Mt]") +
    xlab("Year") + 
    theme(legend.position = "none") 

```

The values in the above example might overestimate the existing ice mass for smaller glacier outlines, especially in isolated and restricted regions where scale and edge effect might play significant roles [@FerrerParis_2023]. The absolute values have to be used with caution, but we will focus most analysis on range standardised measures, thus focusing more on the change relative to initial values and threshold of collapse and not on the absolute values _per se_.

Ice mass can decline to 0 kg, indicating the the glacier ecosystem collapses due to the disappearance of the ice substrate and the subsequent demise of its ice-dependent microbiota. For some regions the model predicts collapse in all scenarios, but other regions might retain (a reduced amount) of glacier ice beyond 2100,
 see @tbl-collapse. 


```{r}
#| label: tbl-collapse
#| tbl-cap: "Proportion of models predicting collapse before 2100 for each assessment unit."


year_of_collapse_data %>%
  group_by(unit_name,ssp) %>%
  summarise(
    prob_collapse=mean(collapse_year<2100)*100,
    prob_min=mean(min_collapse_year<2100)*100,
    prob_max=mean(max_collapse_year<2100)*100,
              .groups = "keep"
    ) %>%
  transmute(
    unit_name,ssp,
    prob_collapse,
    prob_bounds=case_when(
      prob_collapse == prob_max & prob_collapse == prob_min ~ "",
      TRUE ~ sprintf("(%0.1f -- %0.1f)", prob_max, prob_min)
    )
  ) %>%
  pivot_wider(names_from=ssp,values_from=c(prob_collapse, prob_bounds)) %>%
  select(1,3,8,4,9,5,10) %>%
  datatable(
    rownames = FALSE,
    caption = "Proportion of models predicting collapse before 2100 for each assessment unit.",
    options = list(
      dom = 't', 
      pageLength = -1,
      order = list(list(5, 'asc'))),
    colnames = c("Assessment unit", "SSP1-2.6", "bounds", "SSP2-4.5", "bounds", "SSP3-7.0", "bounds")) %>%
      formatRound(c("prob_collapse_SSP1-2.6", "prob_collapse_SSP3-7.0", "prob_collapse_SSP2-4.5"),digits=1) %>%
      formatStyle(
        columns = c("unit_name","prob_collapse_SSP1-2.6", "prob_collapse_SSP3-7.0", "prob_collapse_SSP2-4.5", "prob_bounds_SSP1-2.6", "prob_bounds_SSP3-7.0", "prob_bounds_SSP2-4.5"), 
        fontSize = '80%')
```


We use the time series of mass projections to estimate the year of collapse (first year when mass reaches zero) for each combination of models and scenarios. For at least seven asssessment units a proportion of the dynamic ice mass balance models predict total loss of ice between 2040 and 2100, see @fig-Histogram-collapse-year.[For one unit the collapse might occurs between 2100-2102]{.aside}

```{r}
#| label: fig-Histogram-collapse-year
#| fig-cap: Histogram of year of collapse for seven assessment units (panels) and for three shared socioeconomic pathways (SSP).
#| warning: false


ggplot(data=
  year_of_collapse_data %>%
    filter(
      collapse_year < 2100, 
      ssp %in% c("SSP1-2.6", "SSP2-4.5", "SSP3-7.0")
      )) +
  geom_histogram(aes(x=collapse_year,fill=ssp)) +
  xlab("Year of collapse") + 
  facet_wrap(~unit_name) +
  theme(legend.position = "top")

```

Alternatively, we can use the empirical cumulative distribution function of the year of collapse to estimate the proportion of models indicating collapse for each year  (@fig-ECDF-collapse-year). 

```{r}
#| label: fig-ECDF-collapse-year
#| fig-cap: ECDF (empirical cumulative distribution function) plot of year of collapse for all models (black line) and for each shared socioeconomic pathways (SSP, labeled lines) for the assessment unit of the tropical glacier ecosystems of Mexico.
#| warning: false

data_ss <- year_of_collapse_data %>%
  filter(
    unit_name=="Mexico",
    ssp %in% c("SSP1-2.6", "SSP2-4.5", "SSP3-7.0")
    ) 
label_xy <- data_ss %>%
    group_by(ssp) %>%
  summarise(x=median(collapse_year),
              .groups = "keep") %>%
  mutate(y=0.5)

ggplot(data=data_ss ) +
#  geom_histogram(aes(x=collapse_year,fill=scn)) +
  stat_ecdf(aes(x=collapse_year,color = ssp,linetype = ssp), 
              geom = "step") +
  stat_ecdf(aes(x=collapse_year), 
              geom = "step",lwd=1.3) +
    geom_label_repel(
    aes(x=x,y=y,label = ssp, color=ssp), data = label_xy,
    size = 3) +
  xlab("Year of collapse") + 
  theme(legend.position = "none")

```




